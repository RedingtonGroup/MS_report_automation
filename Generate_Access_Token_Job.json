{
	"jobConfig": {
		"name": "Generate_Access_Token_Job",
		"description": "",
		"role": "arn:aws:iam::257825142977:role/glue_notebook_role",
		"command": "pythonshell",
		"version": "3.0",
		"runtime": null,
		"workerType": null,
		"numberOfWorkers": null,
		"maxCapacity": 0.0625,
		"maxRetries": 0,
		"timeout": 60,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "Generate_Access_Token_Job.py",
		"scriptLocation": "s3://aws-glue-assets-257825142977-ap-south-1/scripts/",
		"language": "python-3.9",
		"spark": false,
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2024-04-29T06:07:33.372Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-257825142977-ap-south-1/temporary/",
		"glueHiveMetastore": true,
		"etlAutoTuning": false,
		"observabilityMetrics": false,
		"pythonShellPrebuiltLibraryOption": "analytics",
		"flexExecution": false,
		"minFlexWorkers": null,
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\nimport boto3\nfrom awsglue.utils import getResolvedOptions\nimport json\nimport requests\nimport boto3\nimport pandas as pd\nfrom io import StringIO\n\n\ndef get_tokens_from_dynamodb():\n    dynamodb = boto3.resource('dynamodb')\n    table = dynamodb.Table('token-table-performance-report')\n    response = table.scan()\n    item = response['Items'][0]\n    return item['refresh_token'], item['client_id'], item['client_secret'], item['access_token'], item['expires_in']\n\n\ndef update_token_in_dynamodb(access_token, expires_in):\n    dynamodb = boto3.resource('dynamodb')\n    table = dynamodb.Table('token-table-performance-report')\n    \n    refresh_token, client_id, client_secret, _, _ = get_tokens_from_dynamodb()\n    \n    table.update_item(\n        Key={'refresh_token': refresh_token},\n        UpdateExpression='SET access_token = :val1, expires_in = :val2',\n        ExpressionAttributeValues={':val1': access_token, ':val2': expires_in}\n    )\n\n\ntry:\n    # Get tokens from DynamoDB\n    refresh_token, client_id, client_secret, access_token, _ = get_tokens_from_dynamodb()\n\n    # Refresh access token\n    url = 'https://accounts.zoho.com/oauth/v2/token'\n    payload = {\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'refresh_token': refresh_token,\n        'grant_type': 'refresh_token'\n    }\n    response = requests.post(url, data=payload)\n\n    if response.status_code == 200:\n        response_data = response.json()\n        access_token = response_data.get('access_token', '')\n        expires_in = response_data.get('expires_in', '')\n\n        # Update token in DynamoDB\n        update_token_in_dynamodb(access_token, expires_in)\nexcept Exception as e:\n    print(f'An error occurred: {str(e)}')\n    event_bridge = boto3.client('events')\n    try:\n        response = event_bridge.put_events(\n            Entries=[\n                {\n                    \"Time\": datetime.now(),\n                    \"Source\": \"custom_event\",\n                    \"DetailType\": \"Glue Job State Change\",\n                    \"Detail\": json.dumps({\n                        \"state\": \"ERROR\",\n                        \"jobName\": \"Generate_Access_Token_Job\",\n                        \"errorMessage\": str(e)  \n                    })\n                }\n            ]\n        )\n        print(response)\n    except Exception as e:\n        print(f'An error occurred: {str(e)}')         "
}